"use strict";(()=>{var a={};a.id=651,a.ids=[651],a.modules={173:(a,b,c)=>{c.d(b,{z:()=>e});var d=c(6330);let e=globalThis.prisma??new d.PrismaClient},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6330:a=>{a.exports=require("@prisma/client")},9094:(a,b,c)=>{c.r(b),c.d(b,{config:()=>t,default:()=>s,handler:()=>v});var d={};c.r(d),c.d(d,{authOptions:()=>o,default:()=>p});var e=c(9046),f=c(8667),g=c(3480),h=c(6435);let i=require("next-auth");var j=c.n(i);let k=require("next-auth/providers/google");var l=c.n(k);let m=require("@next-auth/prisma-adapter");var n=c(173);let o={adapter:(0,m.PrismaAdapter)(n.z),secret:process.env.NEXTAUTH_SECRET,session:{strategy:"jwt"},providers:[l()({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET})],pages:{signIn:"/login"},callbacks:{jwt:async({token:a,user:b,account:c})=>(console.log("JWT callback - token:",JSON.stringify(a,null,2)),console.log("JWT callback - user:",b?JSON.stringify(b,null,2):"null"),b&&(a.userId=b.id,a.role=b.role),a),async session({session:a,token:b}){console.log("Session callback - token:",JSON.stringify(b,null,2)),console.log("Session callback - session before:",JSON.stringify(a,null,2));try{b?.userId?a.userId=b.userId:b?.sub&&(a.userId=b.sub),b?.role&&a.user&&(a.user.role=b.role),console.log("Session callback - session after:",JSON.stringify(a,null,2))}catch(a){console.error("Session callback error:",a)}return a}},debug:!1},p=j()(o);var q=c(8112),r=c(8766);let s=(0,h.M)(d,"default"),t=(0,h.M)(d,"config"),u=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/auth/[...nextauth]",pathname:"/api/auth/[...nextauth]",bundlePath:"",filename:""},userland:d,distDir:".next",projectDir:""});async function v(a,b,c){let d=await u.prepare(a,b,{srcPage:"/api/auth/[...nextauth]"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,q.getTracer)(),e=d.getActiveScopeSpan(),i=u.instrumentationOnRequestError.bind(u),j=async e=>u.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:u.isDev,page:"/api/auth/[...nextauth]",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==r.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await j(e):await d.withPropagatedContext(a.headers,()=>d.trace(r.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:q.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},j))}catch(a){if(u.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}}};var b=require("../../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=9094));module.exports=c})();