{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///Users/sina/Desktop/wollie_software/MVP/pages/login.tsx"],"sourcesContent":["// pages/login.tsx\nimport { useState } from 'react';\nimport Head from 'next/head';\n\n// Optional: if you use next-auth and want to redirect authed users server-side,\n// keep this safe and never throw if session lookup fails.\n// Remove this block entirely if you don't use next-auth.\n/*\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nexport async function getServerSideProps() {\n  try {\n    const session = await getServerSession({ req: null as any, res: null as any }, authOptions);\n    if (session?.user) {\n      return { redirect: { destination: '/dashboard', permanent: false } };\n    }\n  } catch (err) {\n    console.error('getServerSideProps(/login) failed:', err);\n    // Never throw; always render the login page.\n  }\n  return { props: {} };\n}\n*/\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  async function handleLogin(e: React.FormEvent) {\n    e.preventDefault();\n    if (submitting) return; // guard double clicks\n    setSubmitting(true);\n    setError(null);\n\n    try {\n      const res = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        // Keep body minimal and explicit\n        body: JSON.stringify({ email, password }),\n      });\n\n      // Try to parse JSON safely\n      let data: any = {};\n      try {\n        data = await res.json();\n      } catch {\n        // Non-JSON response; leave data as empty object\n      }\n\n      if (res.ok) {\n        // Prefer router push if you’re using next/router; window.location is fine too.\n        window.location.href = '/dashboard';\n        return;\n      }\n\n      // Show server-provided message or a safe fallback\n      setError(data?.message || 'Login failed. Please try again.');\n    } catch (err) {\n      console.error('Client login error:', err);\n      setError('Unable to reach the server. Please try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Sign In • MEALS4V</title>\n        <meta name=\"robots\" content=\"noindex\" />\n      </Head>\n\n      <main aria-labelledby=\"loginHeading\" className=\"container\">\n        <h1 id=\"loginHeading\" className=\"sr-only\">Sign In</h1>\n\n        <form onSubmit={handleLogin} data-testid=\"login-form\" noValidate>\n          <label htmlFor=\"email\" className=\"sr-only\">Email address</label>\n          <input\n            id=\"email\"\n            data-testid=\"email\"\n            type=\"email\"\n            inputMode=\"email\"\n            autoComplete=\"email\"\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            aria-invalid={!!error}\n          />\n\n          <label htmlFor=\"password\" className=\"sr-only\">Password</label>\n          <input\n            id=\"password\"\n            data-testid=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            aria-invalid={!!error}\n          />\n\n          <button\n            data-testid=\"login-button\"\n            type=\"submit\"\n            disabled={submitting}\n            aria-busy={submitting}\n          >\n            {submitting ? 'Signing in…' : 'Sign In'}\n          </button>\n\n          {/* A11y-friendly error surface for tests */}\n          {error && (\n            <p\n              role=\"alert\"\n              data-testid=\"login-error\"\n              aria-live=\"assertive\"\n              style={{ color: '#b00020', marginTop: 8 }}\n            >\n              {error}\n            </p>\n          )}\n        </form>\n\n        <style jsx>{`\n          .container {\n            max-width: 420px;\n            margin: 48px auto;\n            padding: 0 16px;\n            display: grid;\n            gap: 12px;\n          }\n          input, button {\n            padding: 10px 12px;\n            font-size: 16px;\n          }\n          button[disabled] {\n            opacity: 0.7;\n            cursor: not-allowed;\n          }\n          .sr-only {\n            position: absolute;\n            width: 1px;\n            height: 1px;\n            padding: 0;\n            margin: -1px;\n            overflow: hidden;\n            clip: rect(0, 0, 0, 0);\n            white-space: nowrap;\n            border: 0;\n          }\n        `}</style>\n      </main>\n    </>\n  );\n}\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;;;AAClB;AACA;;;;;AAsBe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,eAAe,YAAY,CAAkB;QAC3C,EAAE,cAAc;QAChB,IAAI,YAAY,QAAQ,sBAAsB;QAC9C,cAAc;QACd,SAAS;QAET,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,mBAAmB;gBACzC,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,iCAAiC;gBACjC,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO;gBAAS;YACzC;YAEA,2BAA2B;YAC3B,IAAI,OAAY,CAAC;YACjB,IAAI;gBACF,OAAO,MAAM,IAAI,IAAI;YACvB,EAAE,OAAM;YACN,gDAAgD;YAClD;YAEA,IAAI,IAAI,EAAE,EAAE;gBACV,+EAA+E;gBAC/E,OAAO,QAAQ,CAAC,IAAI,GAAG;gBACvB;YACF;YAEA,kDAAkD;YAClD,SAAS,MAAM,WAAW;QAC5B,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,uBAAuB;YACrC,SAAS;QACX,SAAU;YACR,cAAc;QAChB;IACF;IAEA,qBACE;;0BACE,qKAAC,qHAAA,CAAA,UAAI;;kCACH,qKAAC;kCAAM;;;;;;kCACP,qKAAC;wBAAK,MAAK;wBAAS,SAAQ;;;;;;;;;;;;0BAG9B,qKAAC;gBAAK,mBAAgB;0DAAyB;;kCAC7C,qKAAC;wBAAG,IAAG;kEAAyB;kCAAU;;;;;;kCAE1C,qKAAC;wBAAK,UAAU;wBAAa,eAAY;wBAAa,UAAU;;;0CAC9D,qKAAC;gCAAM,SAAQ;0EAAkB;0CAAU;;;;;;0CAC3C,qKAAC;gCACC,IAAG;gCACH,eAAY;gCACZ,MAAK;gCACL,WAAU;gCACV,cAAa;gCACb,QAAQ;gCACR,OAAO;gCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gCACxC,gBAAc,CAAC,CAAC;;;;;;;0CAGlB,qKAAC;gCAAM,SAAQ;0EAAqB;0CAAU;;;;;;0CAC9C,qKAAC;gCACC,IAAG;gCACH,eAAY;gCACZ,MAAK;gCACL,cAAa;gCACb,QAAQ;gCACR,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gCAC3C,gBAAc,CAAC,CAAC;;;;;;;0CAGlB,qKAAC;gCACC,eAAY;gCACZ,MAAK;gCACL,UAAU;gCACV,aAAW;;0CAEV,aAAa,gBAAgB;;;;;;4BAI/B,uBACC,qKAAC;gCACC,MAAK;gCACL,eAAY;gCACZ,aAAU;gCACV,OAAO;oCAAE,OAAO;oCAAW,WAAW;gCAAE;;0CAEvC;;;;;;;;;;;;;;;;;;;;;;;;AAoCf","debugId":null}}]
}