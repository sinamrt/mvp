services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: diet-app-postgres-prod
    environment:
      POSTGRES_DB: diet_management
      POSTGRES_USER: diet_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - diet-app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U diet_user -d diet_management"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: diet-app-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - diet-app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: diet-app-nextjs-prod
    ports:
      - "3000:3000"
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://diet_user:${POSTGRES_PASSWORD}@postgres:5432/diet_management
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - diet-app-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  diet-app-network:
    driver: bridge 