services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: diet-app-postgres
    environment:
      POSTGRES_DB: diet_management
      POSTGRES_USER: diet_user
      POSTGRES_PASSWORD: diet_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - diet-app-network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: diet-app-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - diet-app-network
    restart: unless-stopped

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: diet-app-nextjs
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://diet_user:diet_password@postgres:5432/diet_management
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - postgres
      - redis
    networks:
      - diet-app-network
    restart: unless-stopped
    command:
      - npm run db:generate
      - npm run db:migrate
      - npm run db:seed
      - npm run dev

  # Database Management Tool (Optional)
  adminer:
    image: adminer:latest
    container_name: diet-app-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - diet-app-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  diet-app-network:
    driver: bridge 